buildscript {
  repositories {
    mavenCentral()
    maven { url 'https://s01.oss.sonatype.org' }
    gradlePluginPortal()
    mavenLocal()
    google()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
  }
  dependencies {
    classpath 'com.google.protobuf:protobuf-gradle-plugin:0.9.2' // Ensure the protobuf plugin is included
  }
}

allprojects {
  apply plugin: 'java'
  apply plugin: 'eclipse'
  apply plugin: 'idea'
  apply plugin: 'com.google.protobuf' // Apply the protobuf plugin

  // This allows you to "Build and run using IntelliJ IDEA", an option in IDEA's Settings.
  idea {
    module {
      outputDir file('build/classes/java/main')
      testOutputDir file('build/classes/java/test')
    }
  }
}

subprojects {
  version = '$projectVersion'
  ext.appName = 'EcoHeroes'

  repositories {
    mavenCentral()
    maven { url 'https://s01.oss.sonatype.org' }
    mavenLocal()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://jitpack.io' }
  }

  // Apply the java-library plugin to all subprojects
  apply plugin: 'java-library'

  // Add dependencies for Protocol Buffers and other libraries
  dependencies {
    api 'com.badlogicgames.gdx:gdx:1.12.1' // Use api() for public dependencies
    implementation 'com.google.protobuf:protobuf-java:4.28.3' // Protobuf Java library
    implementation 'com.google.protobuf:protobuf-java-util:4.28.3' // Optional utility library
    implementation 'io.grpc:grpc-protobuf:1.51.0' // gRPC Protobuf library
    implementation 'io.grpc:grpc-stub:1.51.0' // gRPC Stub library
  }

  // Configure Java compatibility
  sourceCompatibility = '21'
  targetCompatibility = '21'

  // Configure the protobuf plugin
  protobuf {
    protoc {
      artifact = 'com.google.protobuf:protoc:4.28.3' // Specify the protoc compiler version
    }
    plugins {
      // Add any additional plugins if needed
    }
    generateProtoTasks {
      all().forEach { task ->
        task.builtins {
          // Add any built-in options if needed
        }
      }
    }
  }

  // Other tasks and configurations
  tasks.register('generateAssetList') {
    inputs.dir("${project.rootDir}/assets/")
    File assetsFolder = new File("${project.rootDir}/assets/")
    File assetsFile = new File(assetsFolder, "assets.txt")
    assetsFile.delete()

    fileTree(assetsFolder).collect { assetsFolder.relativePath(it) }.sort().each {
      assetsFile.append(it + "\n")
    }
  }
  processResources.dependsOn 'generateAssetList'

  compileJava {
    options.incremental = true
  }
}

eclipse.project.name = 'EcoHeroes' + '-parent'
